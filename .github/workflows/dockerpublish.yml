name: Build & Publish > Docker

on:
  push:
    branches:
      - master
    tags:
      - v*

  pull_request:

env:
  WEB_IMAGE: bugtracker-web
  WEB_DIRECTORY: ./web/

  SERVER_IMAGE: bugtracker-server
  SERVER_DIRECTORY: ./server/

jobs:
  build-publish-web:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build $WEB_DIRECTORY --file $WEB_DIRECTORY/Dockerfile --tag $WEB_IMAGE

      - name: Log into registry
        run: echo "${{ secrets.GH_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$WEB_IMAGE
          
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $WEB_IMAGE $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  build-publish-server:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build $SERVER_DIRECTORY --file $SERVER_DIRECTORY/Dockerfile --tag $SERVER_IMAGE

      - name: Log into registry
        run: echo "${{ secrets.GH_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$SERVER_IMAGE
          
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $SERVER_IMAGE $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

      

      
